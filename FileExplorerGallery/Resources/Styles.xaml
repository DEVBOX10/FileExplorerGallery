<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
                    xmlns:animations="clr-namespace:FileExplorerGallery.Animations"
                    xmlns:converters="clr-namespace:FileExplorerGallery.Converters">
    <!-- CONVERTERS -->
    <converters:ToLowResImageConverter x:Key="toLowResImageConverter"/>
    <converters:PathToFileNameOnlyConverter x:Key="pathToFileNameOnlyConverter"/>
    <converters:PathToThumbnailConverter x:Key="pathToThumbnailConverter"/>
    <converters:PathToThumbnailWidthConverter x:Key="pathToThumbnailWidthConverter"/>
    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter"/>
    <converters:BoolToVisibilityInvertedConverter x:Key="boolToVisibilityInvertedConverter"/>

    <!-- COLORS AND BRUSHES -->
    <Color x:Key="TextForegroundLightColor" PresentationOptions:Freeze="True">#FFFFFF</Color>
    <Color x:Key="TextForegroundDarkerColor" PresentationOptions:Freeze="True">#777777</Color>
    <Color x:Key="PrimaryGreyColor" PresentationOptions:Freeze="True">#606060</Color>
    <Color x:Key="LightGreyColor" PresentationOptions:Freeze="True">#BBBBBB</Color>
    <Color x:Key="DarkGreyColor" PresentationOptions:Freeze="True">#222629</Color>
    <Color x:Key="SemiDarkGreyColor" PresentationOptions:Freeze="True">#FF303234</Color>

    <SolidColorBrush x:Key="ApplicationBackgroundDarkBrush" Color="{StaticResource DarkGreyColor}" PresentationOptions:Freeze="True" />
    <SolidColorBrush x:Key="ApplicationBackgroundSemiDarkBrush" Color="{StaticResource SemiDarkGreyColor}" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="TextForegroundLightBrush" Color="{StaticResource TextForegroundLightColor}" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="TextForegroundDarkerBrush" Color="{StaticResource TextForegroundDarkerColor}" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="PrimaryGreyBrush" Color="{StaticResource PrimaryGreyColor}" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="LightGreyBrush" Color="{StaticResource LightGreyColor}" PresentationOptions:Freeze="True"/>
    <SolidColorBrush x:Key="KeyboardFocusListBoxItemBackground" Color="#44DCEBFE"/>

    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF84ACDD"/>

    <Storyboard x:Key="EnterHoverAnimation">
        <animations:BrushAnimation Storyboard.TargetName="Bd"
                        Storyboard.TargetProperty="Background"
                        To="#BB000000" Duration="0:0:0.3"/>
    </Storyboard>

    <Storyboard x:Key="ExitHoverAnimation">
        <animations:BrushAnimation Storyboard.TargetName="Bd"
                        Storyboard.TargetProperty="Background"
                       To="Transparent" Duration="0:0:0.2"/>
    </Storyboard>

    <Storyboard x:Key="EnterKeyboardFocusAnimation">
        <animations:BrushAnimation Storyboard.TargetName="Bd"
                                   Storyboard.TargetProperty="Background"
                                   To="{StaticResource KeyboardFocusListBoxItemBackground}" Duration="0:0:0.1"/>
    </Storyboard>

    <Storyboard x:Key="ExitKeyboardFocusAnimation">
        <animations:BrushAnimation Storyboard.TargetName="Bd"
                        Storyboard.TargetProperty="Background"
                       To="Transparent" Duration="0:0:0.1"/>
    </Storyboard>

    <Style x:Key="ListBoxItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="0,0,10,10"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">

                    <Border x:Name="Bd" Margin="0" Background="{TemplateBinding Background}" BorderThickness="2" SnapsToDevicePixels="True">

                        <ContentPresenter x:Name="cp" HorizontalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource PrimaryGreyBrush}"/>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="2"/>
                            <Trigger.EnterActions>

                                <RemoveStoryboard BeginStoryboardName="MouseOverExitAnimation"/>
                                <RemoveStoryboard BeginStoryboardName="KeyboardFocusExitAnimation"/>
                                <RemoveStoryboard BeginStoryboardName="KeyboardFocusEnterAnimation"/>
                                <BeginStoryboard x:Name="MouseOverEnterAnimation" Storyboard="{StaticResource EnterHoverAnimation}" HandoffBehavior="Compose"/>

                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="MouseOverEnterAnimation"/>
                                <RemoveStoryboard BeginStoryboardName="KeyboardFocusExitAnimation"/>
                                <RemoveStoryboard BeginStoryboardName="KeyboardFocusEnterAnimation"/>
                                <BeginStoryboard x:Name="MouseOverExitAnimation" Storyboard="{StaticResource ExitHoverAnimation}" HandoffBehavior="Compose"/>

                            </Trigger.ExitActions>
                        </Trigger>


                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="MouseOverEnterAnimation"/>
                                <RemoveStoryboard BeginStoryboardName="MouseOverExitAnimation"/>
                                <RemoveStoryboard BeginStoryboardName="KeyboardFocusExitAnimation"/>

                                <BeginStoryboard x:Name="KeyboardFocusEnterAnimation" Storyboard="{StaticResource EnterKeyboardFocusAnimation}" HandoffBehavior="Compose"/>
                            </MultiTrigger.EnterActions>

                            <MultiTrigger.ExitActions>

                                <RemoveStoryboard BeginStoryboardName="MouseOverEnterAnimation"/>
                                <RemoveStoryboard BeginStoryboardName="MouseOverExitAnimation"/>
                                <RemoveStoryboard BeginStoryboardName="KeyboardFocusEnterAnimation"/>

                                <BeginStoryboard x:Name="KeyboardFocusExitAnimation" Storyboard="{StaticResource ExitKeyboardFocusAnimation}" HandoffBehavior="Compose"/>
                            </MultiTrigger.ExitActions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Image}" x:Key="imageHoverStyle">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Border}}}" Value="true">
                <DataTrigger.EnterActions>
                    <RemoveStoryboard BeginStoryboardName="mouseLeaveAnimation"/>

                    <BeginStoryboard x:Name="mouseEnterAnimation">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="mouseEnterAnimation"/>

                    <BeginStoryboard x:Name="mouseLeaveAnimation">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
        <Style.Setters>
            <Setter Property="Opacity" Value="0.5"/>
        </Style.Setters>
    </Style>

    <Style x:Key="PathWithinButton" TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="{StaticResource TextForegroundDarkerBrush}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="true">
                <Setter Property="Fill" Value="{StaticResource TextForegroundLightBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EllipseWithinButton" TargetType="{x:Type Ellipse}">
        <Setter Property="Fill" Value="{StaticResource ApplicationBackgroundDarkBrush}"/>
        <Setter Property="Stroke" Value="Gray"/>
        <Setter Property="StrokeThickness" Value="2"/>
        <Setter Property="Opacity" Value="0.4"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="true">
                <Setter Property="Stroke" Value="{StaticResource TextForegroundLightBrush}"/>
                <Setter Property="Opacity" Value="0.8"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="RoundButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid UseLayoutRounding="True" SnapsToDevicePixels="True" x:Name="contentGrid" RenderTransformOrigin="0.5 0.5">
                        <Grid.RenderTransform>
                            <ScaleTransform CenterX="0.5" CenterY="0.5"/>
                        </Grid.RenderTransform>
                        <Ellipse Style="{StaticResource EllipseWithinButton}" x:Name="ellipse"/>

                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="exitStoryboard"/>
                                <BeginStoryboard x:Name="enterStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0:0.3" To="1.2" Storyboard.TargetName="contentGrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" >
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Duration="0:0:0:0.3" To="1.2" Storyboard.TargetName="contentGrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" >
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="enterStoryboard"/>
                                <BeginStoryboard x:Name="exitStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0:0.3" To="1.0" Storyboard.TargetName="contentGrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" >
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <DoubleAnimation Duration="0:0:0:0.3" To="1.0" Storyboard.TargetName="contentGrid" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" >
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver}" Value="true">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0:0.3" To="1.2" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" >
                                <DoubleAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>

                            <DoubleAnimation Duration="0:0:0:0.3" To="1.2" Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" >
                                <DoubleAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
        </Style.Triggers>-->
    </Style>
    <!-- SCROLLBAR STYLE-->

    <Style x:Key="__ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        Name="Border"
                        Margin="0"
                        Background="Transparent"
                        BorderBrush="{StaticResource LightGreyBrush}"
                        BorderThickness="0"
                        CornerRadius="0">
                        <Path
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                            Fill="{StaticResource LightGreyBrush}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ApplicationBackgroundLightBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource TextForegroundDisabledBrush}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryGreyBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="__ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="__ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        CornerRadius="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="__HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="38" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.ColumnSpan="3"
                Background="Transparent"
                CornerRadius="0" />
            <RepeatButton
                Grid.Column="0"
                Width="18"
                Command="ScrollBar.LineLeftCommand"
                Content="M 4 0 L 4 8 L 0 4 Z"
                Style="{StaticResource __ScrollBarLineButton}" />
            <Track
                Name="PART_Track"
                Grid.Column="1"
                IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource __ScrollBarPageButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb
                        Margin="0 0 0 0"
                        Background="{StaticResource ApplicationBackgroundSemiDarkBrush}"
                        Style="{StaticResource __ScrollBarThumb}" >
                        <Thumb.Triggers>
                            <EventTrigger RoutedEvent="Border.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <animations:BrushAnimation  Duration="0:0:0:0.2"  To="{StaticResource LightGreyBrush}" Storyboard.TargetProperty="Background"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="Border.MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <animations:BrushAnimation  Duration="0:0:0:0.2"  To="{StaticResource ApplicationBackgroundSemiDarkBrush}" Storyboard.TargetProperty="Background"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Thumb.Triggers>
                    </Thumb>

                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource __ScrollBarPageButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
                Margin="0,0,20,0"
                Grid.Column="2"
                Width="18"
                Command="ScrollBar.LineRightCommand"
                Content="M 0 0 L 4 4 L 0 8 Z"
                Style="{StaticResource __ScrollBarLineButton}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="10" />
                <Setter Property="Template" Value="{StaticResource __HorizontalScrollBar}" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="Orientation" Value="Vertical"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard x:Name="scrollBarMouseOverBegin">
                        <Storyboard>
                            <DoubleAnimation From="10" To="15" Storyboard.TargetProperty="Width" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="scrollBarMouseOverBegin"/>
                </MultiTrigger.ExitActions>
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="Orientation" Value="Vertical"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard x:Name="scrollBarMouseNotOverBegin">
                        <Storyboard>
                            <DoubleAnimation From="15" To="10" Storyboard.TargetProperty="Width" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="scrollBarMouseNotOverBegin"/>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    
    <!-- EMPTY CONTROLS STYLES -->
    <Style x:Key="EmptyButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter Content="{TemplateBinding Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>